name: Publish Release

on:
  workflow_dispatch:   # this means you can manually trigger it from the github UI
  push:  # This tells GitHub to watch for commits
    branches:
      - release
    paths:
      - 'WapProjPackaging/**/*'
      - 'NoteTakingApp/**/*'
      - '.github/workflows/release.yml'
env:
  WinformsProjectPath: NoteTakingApp\NoteTakingApp.csproj
  WapProjectPath: WapProjPackaging\WapProjPackaging.wapproj
  PackageOutputDir: WapProjPackaging\AppPackages

jobs:
  sideloading_packages:
    runs-on: windows-latest 
    permissions:
      id-token: write
      contents: write
      discussions: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch secrets from AKeyless
      id: akeyless
      uses: LanceMcCarthy/akeyless-action@v4
      with:
        access-id: 'p-fq3qbjjxv839'
        static-secrets: '{"/personal-keys/mccarthy/lancelot-pfx-base64":"pfx-base64", "/personal-keys/mccarthy/lancelot-pfx-privatekey":"pfx-password"}'

    # ************************| Install tools (.NET SDK alreayds installed) |************************ #

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.2
    
    # ************************| Create version numebr and update manifests |************************ #

    # Uses today's date + run number to create a version number (e.g. 2024.627.1.0) that can be used in subsequent steps
    - name: Generate version number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        echo "APP_VERSION=$ver" >> $env:GITHUB_OUTPUT

    # Update the appxmanifest for SideLoad (and signing with PFX)
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content "WapProjPackaging\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{steps.version-creator.outputs.APP_VERSION}}"
        $manifest.Package.Identity.Name = "12345Gerstenware.MediaFileManager"
        $manifest.Package.Identity.Publisher = 'CN="Lancelot Software, LLC", O="Lancelot Software, LLC", L=NORTH BILLERICA, S=Massachusetts, C=US'
        $manifest.Package.Properties.PublisherDisplayName = "Lancelot Software"
        $manifest.save("WapProjPackaging\Package.appxmanifest")

    # ************************| Restore Codesigning Cert |************************ #

    # Decode the Base64 encoded Pfx
    - name: Decode base64 and save code signing certificate PFX
      id: save-pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{steps.akeyless.outputs.pfx-base64}}")
        $certificatePath = "${{env.GITHUB_WORKSPACE}}\LancelotSoftwareLLC.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
      

    # ************************| Build Sideload MSIX Packages |************************ #

    - name: build Winforms project
      run: |
        dotnet build ${{env.WinformsProjectPath}} -c Release -r win-x64
        dotnet build ${{env.WinformsProjectPath}} -c Release -r win-x84
        dotnet build ${{env.WinformsProjectPath}} -c Release -r win-arm64

    - name: Restore packages for packaging project
      run: msbuild ${{env.WapProjectPath}} /t:Restore /p:Configuration=Release

    - name: Build wapproj to create msix app package
      run: msbuild ${{env.WapProjectPath}} /p:Configuration=Release /p:Platform=x64 /p:AppxBundlePlatforms="x86|x64|arm64" /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxBundle=Always /p:PackageCertificateKeyFile="${{env.GITHUB_WORKSPACE}}\LancelotSoftwareLLC.pfx" /p:PackageCertificatePassword=${{steps.akeyless.outputs.pfx-password}} /p:AppxPackageSigningEnabled=True /p:AppxPackageDir=${{env.PackageOutputDir}}


    # ************************| GitHub Release |************************ #

    - uses: actions/upload-artifact@v4
      with:
        name: "v.${{steps.version-creator.outputs.APP_VERSION}}.msixbundle"
        path: "${{env.PackageOutputDir}}/*.msixbundle"

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        name: "NoteTakingApp v.${{steps.version-creator.outputs.APP_VERSION}}"
        tag_name: "v${{steps.version-creator.outputs.APP_VERSION}}"
        body: "This is v.${{steps.version-creator.outputs.APP_VERSION}} of the NoteTaking app, enjoy!"
        files: "${{env.PackageOutputDir}}/*.msixbundle"