name: Publish Release

on:
  workflow_dispatch:   # this means you can manually trigger it from the github UI
  push:  # This tells GitHub to watch for commits
    branches:
      - release
    paths:
      - 'WapProjPackaging/**/*'
      - 'NoteTakingApp/**/*'
      - '.github/workflows/release.yml'
env:
  PfxThumbprint: "6317f13d6d4324b3f956e732255c521558ecb235"
  TFM: net6.0-windows10.0.19041.0
  NugetConfigPath: nuget.config
  WappProjectPath: WapProjPackaging\WapProjPackaging.wapproj
  AppxPackageDirectory: WapProjPackaging\AppPackages

jobs:
  sideloading_packages:
    runs-on: windows-latest 
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch secrets from AKeyless
      id: akeyless
      uses: LanceMcCarthy/akeyless-action@v4
      with:
        access-id: 'p-fq3qbjjxv839'
        static-secrets: '{"/personal-keys/mccarthy/lancelot-pfx-base64":"pfx-base64", "/personal-keys/mccarthy/lancelot-pfx-privatekey":"pfx-password"}'

    # ************************| Install tools |************************ #

    # Install the .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    
    # Because this is a WinForms app, there is an extra step of also adding msbuild.exe
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.2
    
    # ************************| Create version numebr and update manifests |************************ #

    # Uses today's date + run number to create a version number (e.g. 2024.627.1) that can be used in subsequent steps
    - name: Generate version number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber
        echo "APP_VERSION=$ver" >> $env:GITHUB_OUTPUT

    # Update the appxmanifest for SideLoad (and signing with PFX)
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content "WapProjPackaging\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{steps.version-creator.outputs.APP_VERSION}}"
        $manifest.Package.Identity.Name = "61469LanceLotSoftware.MediaFileManager"
        $manifest.Package.Identity.Publisher = 'CN="Lancelot Software, LLC", O="Lancelot Software, LLC", L=NORTH BILLERICA, S=Massachusetts, C=US'
        $manifest.Package.Properties.PublisherDisplayName = "Lancelot Software"
        $manifest.save("WapProjPackaging\Package.appxmanifest")

    # ************************| Restore Codesigning Cert |************************ #

    # Decode the Base64 encoded Pfx
    - name: Decode base64 and save code signing certificate PFX
      id: save-pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{steps.akeyless.outputs.pfx-base64}}")
        $certificatePath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "LancelotSoftwareLLC.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        echo "PFX_PATH=$certificatePath" >> $env:GITHUB_OUTPUT

    # ************************| Build Sideload Packages |************************ #

    - name: build Winforms project
      run: dotnet build ${{env.WappProjectPath}} -c Release -r win10-x64

    - name: Restore packages for packaging project
      run: msbuild ${{env.WappProjectPath}} /t:Restore /p:Configuration=Release

    - name: Build wapproj to create msix app package
      run: msbuild ${{env.WappProjectPath}} /p:Configuration=Release /p:Platform=x64 /p:AppxBundlePlatforms="x86|x64|arm64" /p:UapAppxPackageBuildMode=Always /p:AppxBundle=SideloadOnly /p:AppxPackageDir=${{env.AppxPackageDirectory}} /p:PackageCertificateKeyFile="${{steps.save-pfx.ouputs.PFX_PATH}}" /p:PackageCertificatePassword=${{steps.akeyless.outputs.pfx-password}} /p:PackageCertificateThumbprint=${{env.PfxThumbprint}} /p:AppxPackageSigningEnabled=True


    # ************************| GitHub Release |************************ #

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: "v.${{steps.version-creator.outputs.APP_VERSION}}"
        release_name: "NoteTakingApp v.${{steps.version-creator.outputs.APP_VERSION}}"
        draft: false
        body: "This is a new release of the NoteTaking app, enjoy!"

    - name: Attach Release asset
      id: upload-sideload-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ${{env.AppxPackageDirectory}}
        asset_name: "*.msixbundle"
        asset_content_type: application/zip


    # # Build using the publish command, instead of the build command
    # - name: Build the WinForms application in "Release" mode and targeting 64 bit Windows OS
    #   run: dotnet publish NoteTakingApp\NoteTakingApp.csproj -c Release -r win-x64 -o ./build-output

    # - name: Combine files into zip
    #   run: Compress-Archive -Path ./build-output -DestinationPath ./build-output/NoteTakingApp.zip

    # # https://github.com/actions/create-release
    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: "v.${{ steps.version-creator.outputs.APP_VERSION }}"
    #     release_name: "NoteTakingApp v.${{ steps.version-creator.outputs.APP_VERSION }}"
    #     draft: false
    #     body: "This is a new release of the NoteTaking app, enjoy!"

    # # https://github.com/actions/upload-release-asset
    # - name: Attach Release asset
    #   id: upload-sideload-asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./build-output/NoteTakingApp.zip
    #     asset_name: NoteTakingApp.zip
    #     asset_content_type: application/zip
